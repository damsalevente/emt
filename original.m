% This script is written and read by pdetool and should NOT be edited.
% There are two recommended alternatives:
 % 1) Export the required variables from pdetool and create a MATLAB script
 %    to perform operations on these.
 % 2) Define the problem completely using a MATLAB script. See
 %    http://www.mathworks.com/help/pde/examples/index.html for examples
 %    of this approach.
function pdemodel
[pde_fig,ax]=pdeinit;
pdetool('appl_cb',6);
set(ax,'DataAspectRatio',[1 1 1]);
set(ax,'PlotBoxAspectRatio',[1 1.0044965974738631 1.9819499645273877]);
set(ax,'XLimMode','auto');
set(ax,'YLimMode','auto');
set(ax,'XTickMode','auto');
set(ax,'YTickMode','auto');

% Geometry description:
pdecirc(0,0,1,'C1');
pdecirc(0,0,0.80000000000000004,'C2');
pdecirc(0,0,0.59999999999999998,'C3');
pdecirc(0,0,0.5,'C4');
pdecirc(0,0,0.40000000000000002,'C5');
pderect([-0.20000000000000001 0.20000000000000001 0.20000000000000001 0.90000000000000002],'R1');
pderect([-0.10000000000000001 0.10000000000000001 0.20000000000000001 0.90000000000000002],'R2');
pderect([0 1 0 1],'SQ1');
set(findobj(get(pde_fig,'Children'),'Tag','PDEEval'),'String','(C1+C2+C3+C4+C5+R1+R2)*SQ1')

% Boundary conditions:
pdetool('changemode',0)
pdetool('removeb',[25 ]);
pdetool('removeb',[1 ]);
pdetool('removeb',[6 ]);
pdetool('removeb',[2 ]);
pdetool('removeb',[5 ]);
pdetool('removeb',[26 ]);
pdetool('removeb',[23 ]);
pdetool('removeb',[19 ]);
pdetool('removeb',[4 ]);
pdetool('removeb',[19 ]);
pdetool('removeb',[20 ]);
pdesetbd(16,...
'dir',...
1,...
'1',...
'0')
pdesetbd(15,...
'dir',...
1,...
'1',...
'0')
pdesetbd(14,...
'dir',...
1,...
'1',...
'0')
pdesetbd(13,...
'dir',...
1,...
'1',...
'0')
pdesetbd(12,...
'dir',...
1,...
'1',...
'0')
pdesetbd(11,...
'dir',...
1,...
'1',...
'0')
pdesetbd(10,...
'dir',...
1,...
'1',...
'0')
pdesetbd(9,...
'dir',...
1,...
'1',...
'0')
pdesetbd(8,...
'neu',...
1,...
'0',...
'0')
pdesetbd(7,...
'neu',...
1,...
'0',...
'0')
pdesetbd(6,...
'neu',...
1,...
'0',...
'0')
pdesetbd(5,...
'neu',...
1,...
'0',...
'0')
pdesetbd(4,...
'neu',...
1,...
'0',...
'0')

% Mesh generation:
setappdata(pde_fig,'Hgrad',1.3);
setappdata(pde_fig,'refinemethod','regular');
setappdata(pde_fig,'jiggle',char('on','mean',''));
setappdata(pde_fig,'MesherVersion','preR2013a');
pdetool('initmesh')

% PDE coefficients:
pdeseteq(1,...
'1./(4*pi*10^(-7)*(5000./(1+0.05*(ux.^2+uy.^2))+200))!1./(4*pi*10^(-7)*(5000./(1+0.05*(ux.^2+uy.^2))+200))!1./(4*pi*10^(-7))!1./(4*pi*10^(-7))',...
'0.0!0.0!0.0!0.0',...
'0!0!0!10',...
'1.0!1.0!1.0!1.0',...
'0:10',...
'0.0',...
'0.0',...
'[0 100]')
setappdata(pde_fig,'currparam',...
['4*pi*10^(-7)*(5000./(1+0.05*(ux.^2+uy.^2))+200)!4*pi*10^(-7)*(5000./(1+0.05*(ux.^2+uy.^2))+200)!4*pi*10^(-7)!4*pi*10^(-7)';...
'0!0!0!10                                                                                                                 '])

% Solve parameters:
setappdata(pde_fig,'solveparam',...
char('0','1000','10','pdeadworst',...
'0.5','longest','1','1e-4','','fixed','inf'))

% Plotflags and user data strings:
setappdata(pde_fig,'plotflags',[1 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 0 1]);
setappdata(pde_fig,'colstring','');
setappdata(pde_fig,'arrowstring','');
setappdata(pde_fig,'deformstring','');
setappdata(pde_fig,'heightstring','');

% Solve PDE:
pdetool('solve')
